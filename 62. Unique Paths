A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right


class Solution {
    public int uniquePaths(int m, int n) {
        int[][] matrix = new int[m][n];
        for(int [] box : matrix) {
            Arrays.fill(box, 1);
        }
        
        for(int col = 1; col < m; col++) {
          for(int row = 1; row < n; row++) {
              matrix[col][row] = matrix[col-1][row] + matrix[col][row-1]
          }
        }
        
        return matrix[m-1][n-1]
    } 
}

time and space m * n
