Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).

You may assume that the intervals were initially sorted according to their start times.

Example 1:

Input: intervals = [[1,3],[6,9]], newInterval = [2,5]
Output: [[1,5],[6,9]]


class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> result = new ArrayList<>();
        
        for(int[] i : intervals) {
            // front part
            if(newInterval == null || i[1] < newInterval[0]) {
               result.add(i);
               //                            0           1 
               //time to add    because the [3, 4] > [1, 2]
            } else if(i[0] > newInterval[1]) {
               result.add(newInterval);
               result.add(i);
               newInterval = null;
            } else {
              //time to merge
              newInterval[0] = Math.min(newInterval[0], i[0]);
              newInterval[1] = Math.max(newInterval[1], i[1]);
            }
        
        }
        
        if(newInterval != null) {
          result.add(newInterval);
        }
        
        return result.toArray(new int[result.size()-1][]);
    }
}
