Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root== null) return ans;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        int level = 0;
        while(!queue.isEmpty()) {
            int length = queue.size();

            ans.add(new ArrayList<Integer>());
            for(int i = 0; i < length; i++) {
                TreeNode node = queue.remove();
                ans.get(level).add(node.val);
                
                if(node.left != null) {
                    queue.add(node.left);
                }
                
                if(node.right != null){
                    queue.add(node.right);
                }
            }
            level++;
        
         }
        return ans;
    } 
}
