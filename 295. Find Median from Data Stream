Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.

For example,
[2,3,4], the median is 3

[2,3], the median is (2 + 3) / 2 = 2.5

Design a data structure that supports the following two operations:

void addNum(int num) - Add a integer number from the data stream to the data structure.
double findMedian() - Return the median of all elements so far.
 

Example:

addNum(1)
addNum(2)
findMedian() -> 1.5
addNum(3) 
findMedian() -> 2


class MedianFinder {

    /** initialize your data structure here. */
    
    //use a heap strucutre miniheap 
    // median is number half way in the set
    //odd  return mid
    //even return the mid 2 / 2
    
    // use two heap 
    // maxheap to store the small side with biggest of left
    // minheap to store the big side with smaller on right
    // check the two size see if even or odd then return based on that
    
    PriorityQueue<Integer> left, right;
    public MedianFinder() {
        //maxheap
        left = new PriorityQueue<>((a,b)-> b - a);
        // minheap
        right = new PriorityQueue<>();
    }
    
    public void addNum(int num) {
        //add o logn
        if(left.isEmpty() || num <= left.peek()) {
            left.offer(num);
        } else {
            right.offer(num);
        }
        
        
        //make sure its either 1 less or more 
        if(left.size() - right.size() > 1) {
            right.offer(left.poll());
        }
        
        if(right.size() - left.size() > 1) {
            left.offer(right.poll());
        }
    }
    
    public double findMedian() {
        // o 1
        int left_len = left.size(), right_len = right.size();
        
        if(left.size() > right.size() || right.size() > left.size()) {
            return (double)(left_len > right_len ? left.peek() : right.peek());
        }
        else {
            return (left.peek() + right.peek()) / 2.0;
        }
        
    }
}


/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
