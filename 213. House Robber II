class Solution {
    public int rob(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        
        if(nums.length  == 1) return nums[0];
        
        //      [1, 2, 3, 1];
        //check [1, 2, 3]
        int max1 = rob_simple(nums, 0, nums.length - 2);
        
        //      [1, 2, 3, 1];
        //check [ , 2, 3, 1]
        int max2 = rob_simple(nums, 1, nums.length - 1);
        
        return Math.max(max1, max2);
    }
    
    public int rob_simple(int[] nums, int start, int end) {
        int currMax = 0;
        int prevMax = 0;
        
        for(int i = start; i <= end; i++) {
            int temp = currMax;
            currMax = Math.max(prevMax + nums[i], currMax);
            prevMax = temp;
        }
        
        return currMax;
    }
    
}
