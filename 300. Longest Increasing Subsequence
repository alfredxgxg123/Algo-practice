Given an unsorted array of integers, find the length of longest increasing subsequence.

Example:

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 

class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0) return 0;
        //dp
        //bottom up
        //create an array
        
        int[] dp = new int[nums.length];
        
        //start with 1
        dp[0] = 1; 
        
        int maxans = 1;
        
        // check backward
        for(int i = 1; i < dp.length; i++) {
            int tempmax = 1;
            
            for(int j = 0; j < i; j++) {
                if(nums[j] < nums[i]) {
                    
                    // in case there is a cut off
                    // 1 3 4 2 10 , 2 will change the num
                    tempmax = Math.max(dp[j]+1, tempmax);
                }
            }
            dp[i] = tempmax;
            maxans = Math.max(dp[i], maxans);
        }
        
        return maxans;
    }
}
