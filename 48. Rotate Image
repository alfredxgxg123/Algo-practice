You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Note:
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Given input matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

rotate the input matrix in-place such https://github.com/alfredxgxg123/Algo-practicethat it becomes:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]

class Solution {
    public void rotate(int[][] matrix) {
        int row = matrix.length;
        int col = matrix[0].length;
        for(int i = 0; i < row; i++) {
          for(int j = i+1; j < col; j++) {
              int temp = matrix[j][i];
              matrix[j][i] = matrix[i][j];
              matrix[i][j] = temp;
          }
        }
        
        for(int i = 0; i < row; i++) {
            int left = 0, right = matrix[i].length - 1;
            while(left < right) {
                int temp = matrix[i][right];
                matrix[i][right] = matrix[i][left];
                matrix[i][left] = temp;
                left++;
                right--;
            }
        }
    }
}
