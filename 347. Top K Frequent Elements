Given a non-empty array of integers, return the k most frequent elements.

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();
        
        for(int n : nums) {
            map.put(n, map.getOrDefault(n, 0) + 1);
        }
        
        //make a heap
        //less freque first
        Queue<Integer> heap = new PriorityQueue<>(
        
            (n1, n2) -> map.get(n1) - map.get(n2)
        );
        
        for(int n : map.keySet()) {
            
            heap.add(n);
            if(heap.size() > k) {
                heap.poll();
            }
        }
        
        //now add to array 
        int[] ans = new int[k];
        
        for(int i = 0; i < k; i++) {
            ans[i] = heap.poll();
        }
        
        return ans;
    }
}
