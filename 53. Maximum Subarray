Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Example:

Input: [-2,1,-3,4,-1,2,1,-5,4],
//      -2 1 -2 4 3 5 6  1  5 bottom up dp
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6

class Solution {
    public int maxSubArray(int[] nums) {
        int ans = nums[0];
        int currsum = nums[0];
        for(int i = 1; i < nums.length; i++) {
          currsum = Math.max(nums[i], currsum + nums[i]); 
          ans = Math.max(ans, currsum);
        }
        return ans;
    }
}
